<!doctype html>
<html>
<head>
<link rel="stylesheet" type="text/css" href='qq.css' />
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
<script src="/js/github.js"></script>
<script src="/js/qqv26.js"></script>
<script src='../js/qq.github.v3.js'></script></head>
<body><script>
let output;
let gray=qq.ce({tag:'div',style:{top:'0px',left:'0px',right:'0px',bottom:'0px',background:'gray',position: 'absolute','z-index':5},name:'main',event:{click:function(){}}});


qq.ce({tag:'button',it:'Загрузить файлы',parent:gray,style:{ 'margin-top':'50px' ,'margin-left':'100px', 'font-size':'25px'},event:{click:async function(){ try   {const [fileHandle] = await window.showOpenFilePicker({

Вот проблема в твоём списке расширений:

Ты написал:

'.htm', 'text/html', '.html'


А 'text/html' — это MIME тип, а в массиве должны быть только расширения с точкой!

Правильно будет так:

accept: {
  'text/plain': ['.txt', '.json', '.log', '.htm', '.html'],
  'text/html': ['.htm', '.html']
}


То есть:

В ключах — MIME типы ('text/plain', 'text/html').
В массивах — расширения с точкой ('.htm', '.html', '.txt' и т.д.).
Никогда не вставляй MIME тип в массив расширений!

Если хочешь, чтобы и .htm и .html показывались, лучше выделить их отдельным ключом 'text/html', а не смешивать с 'text/plain'.

Например так:

types: [
  {
    description: 'Text files',
    accept: {
      'text/plain': ['.txt', '.json', '.log']
    }
  },
  {
    description: 'HTML files',
    accept: {
      'text/html': ['.htm', '.html']
    }
  }
]


Так диалог выбора будет понятнее и покажет оба типа файлов.

});
      const file = await fileHandle.getFile();
      const text = await file.text();
      output.innerText= text;} catch(err){output.innerText = 'Ошибка: ' + err.message;
} }}
});alert(17);


output=qq.ce({tag:'div',style:{top:'100px',left:'0px',right:'0px',bottom:'0px',background:'lightgreen' ,position: 'absolute','z-index':5,overflow:'hidden'}, parent:gray, event:{click:function(){}}});
</script>