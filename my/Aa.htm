<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Простое приложение</title>
  <style>
    body { margin: 0; }
  </style>
</head>
<body>


  <script>
    function createColoredSectionsWithDynamicBottom() {
      const grayPanel = document.createElement('div');
      grayPanel.style.backgroundColor = 'lightgray';
      grayPanel.style.position = 'absolute';
      grayPanel.style.top = '0';
      grayPanel.style.left = '0';
      grayPanel.style.width = '100%';
      grayPanel.style.height = '100%';
      grayPanel.style.zIndex = '0';


      const topBlueSection = document.createElement('div');
      topBlueSection.style.backgroundColor = 'blue';
      topBlueSection.style.width = '100%';
      topBlueSection.style.height = '30px';
      topBlueSection.style.display = 'flex'; // Чтобы кнопки располагались в ряд
      topBlueSection.style.alignItems = 'center'; // Вертикальное выравнивание по центру
      topBlueSection.style.paddingLeft = '10px'; // Небольшой отступ слева


      const bottomRedSection = document.createElement('div');
      bottomRedSection.style.backgroundColor = 'red';
      bottomRedSection.style.width = '100%';
      bottomRedSection.style.position = 'absolute';
      bottomRedSection.style.bottom = '0';


      const buttonTextsBottom = ["localLs", "github", "indexedDb", "a4"];
      const buttonsBottom = [];
      for (let i = 0; i < buttonTextsBottom.length; i++) {
        const button = document.createElement('button');
        button.textContent = buttonTextsBottom[i];
        bottomRedSection.appendChild(button);
        button.style.marginRight = '5px';
        button.style.fontSize = '1.5em';
        buttonsBottom.push(button);
      }


      const middleGreenSection = document.createElement('div');
      middleGreenSection.style.backgroundColor = 'green';
      middleGreenSection.style.width = '100%';
      middleGreenSection.style.position = 'absolute';
      middleGreenSection.style.top = topBlueSection.offsetHeight + 'px';
      middleGreenSection.style.bottom = bottomRedSection.offsetHeight + 'px';
      middleGreenSection.style.display = 'flex';
      middleGreenSection.style.flexDirection = 'column';


      const middleLightGreenSection = document.createElement('div');
      middleLightGreenSection.style.backgroundColor = 'lightgreen';
      middleLightGreenSection.style.flexGrow = '1';
      middleGreenSection.appendChild(middleLightGreenSection);


      const middleBrownSection = document.createElement('div');
      middleBrownSection.style.backgroundColor = 'brown';
      middleGreenSection.appendChild(middleBrownSection);
      middleBrownSection.style.width = '100%';


      const buttonTextsMiddle = ["File", "Edit", "View"];
      for (let i = 0; i < buttonTextsMiddle.length; i++) {
        const button = document.createElement('button');
        button.textContent = buttonTextsMiddle[i];
        middleBrownSection.appendChild(button);
        button.style.marginRight = '10px';
      }


      grayPanel.appendChild(topBlueSection);
      grayPanel.appendChild(bottomRedSection);
      grayPanel.appendChild(middleGreenSection);


      document.body.appendChild(grayPanel);


      function updateMiddleSectionHeight() {
        const topHeight = topBlueSection.offsetHeight;
        const bottomHeight = bottomRedSection.offsetHeight;
        middleGreenSection.style.top = topHeight + 'px';
        middleGreenSection.style.bottom = bottomHeight + 'px';
      }


      const topObserver = new ResizeObserver(entries => {
        updateMiddleSectionHeight();
      });
      topObserver.observe(topBlueSection);


      const bottomObserver = new ResizeObserver(entries => {
        updateMiddleSectionHeight();
      });
      bottomObserver.observe(bottomRedSection);


      // Получаем кнопку "localLs" (первую кнопку в bottomRedSection)
      const localLsButton = buttonsBottom[0];
      localLsButton.addEventListener('click', () => {
        console.log('Кнопка "localLs" была нажата!');
        // Функция для добавления кнопок в верхнюю панель
        function addButtonsToTopPanel() {
          const button1 = document.createElement('button');
          button1.textContent = 'Save';
          button1.style.marginRight = '10px';
          topBlueSection.appendChild(button1);


          const button2 = document.createElement('button');
          button2.textContent = 'Load';
          topBlueSection.appendChild(button2);
        }
        addButtonsToTopPanel(); // Вызываем функцию при клике на "localLs"
      });


      // Создаем верхнюю желтую панель
      const topYellowPanel = document.createElement('div');
      topYellowPanel.style.backgroundColor = 'yellow';
      topYellowPanel.style.position = 'absolute';
      topYellowPanel.style.top = '0';
      topYellowPanel.style.left = '0';
      topYellowPanel.style.width = '100%';
      topYellowPanel.style.height = '100%';
      topYellowPanel.style.zIndex = '1';
      document.body.appendChild(topYellowPanel);


      topYellowPanel.addEventListener('click', () => {
        topYellowPanel.style.display = 'none';
      });


      return {
        setTopHeight: function(newHeight) {
          topBlueSection.style.height = newHeight + 'px';
        }
      };
    }


    window.onload = createColoredSectionsWithDynamicBottom;
  </script>


</body>
</html>

